// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: foreverbull/backtest/session.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Session_Status_Status int32

const (
	Session_Status_CREATED   Session_Status_Status = 0
	Session_Status_RUNNING   Session_Status_Status = 1
	Session_Status_COMPLETED Session_Status_Status = 2
	Session_Status_FAILED    Session_Status_Status = 3
)

// Enum value maps for Session_Status_Status.
var (
	Session_Status_Status_name = map[int32]string{
		0: "CREATED",
		1: "RUNNING",
		2: "COMPLETED",
		3: "FAILED",
	}
	Session_Status_Status_value = map[string]int32{
		"CREATED":   0,
		"RUNNING":   1,
		"COMPLETED": 2,
		"FAILED":    3,
	}
)

func (x Session_Status_Status) Enum() *Session_Status_Status {
	p := new(Session_Status_Status)
	*p = x
	return p
}

func (x Session_Status_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Session_Status_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_foreverbull_backtest_session_proto_enumTypes[0].Descriptor()
}

func (Session_Status_Status) Type() protoreflect.EnumType {
	return &file_foreverbull_backtest_session_proto_enumTypes[0]
}

func (x Session_Status_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Session_Status_Status.Descriptor instead.
func (Session_Status_Status) EnumDescriptor() ([]byte, []int) {
	return file_foreverbull_backtest_session_proto_rawDescGZIP(), []int{0, 0, 0}
}

type Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Backtest      string                 `protobuf:"bytes,2,opt,name=backtest,proto3" json:"backtest,omitempty"`
	Statuses      []*Session_Status      `protobuf:"bytes,3,rep,name=statuses,proto3" json:"statuses,omitempty"`
	Executions    int64                  `protobuf:"varint,4,opt,name=executions,proto3" json:"executions,omitempty"`
	Port          *int64                 `protobuf:"varint,5,opt,name=port,proto3,oneof" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_foreverbull_backtest_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_backtest_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_foreverbull_backtest_session_proto_rawDescGZIP(), []int{0}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetBacktest() string {
	if x != nil {
		return x.Backtest
	}
	return ""
}

func (x *Session) GetStatuses() []*Session_Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *Session) GetExecutions() int64 {
	if x != nil {
		return x.Executions
	}
	return 0
}

func (x *Session) GetPort() int64 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

type Session_Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Session_Status_Status  `protobuf:"varint,1,opt,name=status,proto3,enum=foreverbull.backtest.Session_Status_Status" json:"status,omitempty"`
	Error         *string                `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	OccurredAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=occurred_at,json=occurredAt,proto3" json:"occurred_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session_Status) Reset() {
	*x = Session_Status{}
	mi := &file_foreverbull_backtest_session_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session_Status) ProtoMessage() {}

func (x *Session_Status) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_backtest_session_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session_Status.ProtoReflect.Descriptor instead.
func (*Session_Status) Descriptor() ([]byte, []int) {
	return file_foreverbull_backtest_session_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Session_Status) GetStatus() Session_Status_Status {
	if x != nil {
		return x.Status
	}
	return Session_Status_CREATED
}

func (x *Session_Status) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Session_Status) GetOccurredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurredAt
	}
	return nil
}

var File_foreverbull_backtest_session_proto protoreflect.FileDescriptor

var file_foreverbull_backtest_session_proto_rawDesc = []byte{
	0x0a, 0x22, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c,
	0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x03, 0x0a, 0x07,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62,
	0x75, 0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x1a, 0xee,
	0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x66, 0x6f, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x68, 0x6a, 0x6e, 0x69, 0x6c, 0x73, 0x73, 0x6f,
	0x6e, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_foreverbull_backtest_session_proto_rawDescOnce sync.Once
	file_foreverbull_backtest_session_proto_rawDescData = file_foreverbull_backtest_session_proto_rawDesc
)

func file_foreverbull_backtest_session_proto_rawDescGZIP() []byte {
	file_foreverbull_backtest_session_proto_rawDescOnce.Do(func() {
		file_foreverbull_backtest_session_proto_rawDescData = protoimpl.X.CompressGZIP(file_foreverbull_backtest_session_proto_rawDescData)
	})
	return file_foreverbull_backtest_session_proto_rawDescData
}

var file_foreverbull_backtest_session_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_foreverbull_backtest_session_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_foreverbull_backtest_session_proto_goTypes = []any{
	(Session_Status_Status)(0),    // 0: foreverbull.backtest.Session.Status.Status
	(*Session)(nil),               // 1: foreverbull.backtest.Session
	(*Session_Status)(nil),        // 2: foreverbull.backtest.Session.Status
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_foreverbull_backtest_session_proto_depIdxs = []int32{
	2, // 0: foreverbull.backtest.Session.statuses:type_name -> foreverbull.backtest.Session.Status
	0, // 1: foreverbull.backtest.Session.Status.status:type_name -> foreverbull.backtest.Session.Status.Status
	3, // 2: foreverbull.backtest.Session.Status.occurred_at:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_foreverbull_backtest_session_proto_init() }
func file_foreverbull_backtest_session_proto_init() {
	if File_foreverbull_backtest_session_proto != nil {
		return
	}
	file_foreverbull_backtest_session_proto_msgTypes[0].OneofWrappers = []any{}
	file_foreverbull_backtest_session_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foreverbull_backtest_session_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_foreverbull_backtest_session_proto_goTypes,
		DependencyIndexes: file_foreverbull_backtest_session_proto_depIdxs,
		EnumInfos:         file_foreverbull_backtest_session_proto_enumTypes,
		MessageInfos:      file_foreverbull_backtest_session_proto_msgTypes,
	}.Build()
	File_foreverbull_backtest_session_proto = out.File
	file_foreverbull_backtest_session_proto_rawDesc = nil
	file_foreverbull_backtest_session_proto_goTypes = nil
	file_foreverbull_backtest_session_proto_depIdxs = nil
}
