// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: foreverbull/backtest/ingestion_service.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCurrentIngestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentIngestionRequest) Reset() {
	*x = GetCurrentIngestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentIngestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentIngestionRequest) ProtoMessage() {}

func (x *GetCurrentIngestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentIngestionRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentIngestionRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_backtest_ingestion_service_proto_rawDescGZIP(), []int{0}
}

type GetCurrentIngestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingestion *Ingestion      `protobuf:"bytes,1,opt,name=ingestion,proto3" json:"ingestion,omitempty"`
	Status    IngestionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=foreverbull.backtest.IngestionStatus" json:"status,omitempty"`
	Size      int64           `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetCurrentIngestionResponse) Reset() {
	*x = GetCurrentIngestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentIngestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentIngestionResponse) ProtoMessage() {}

func (x *GetCurrentIngestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentIngestionResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentIngestionResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_backtest_ingestion_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrentIngestionResponse) GetIngestion() *Ingestion {
	if x != nil {
		return x.Ingestion
	}
	return nil
}

func (x *GetCurrentIngestionResponse) GetStatus() IngestionStatus {
	if x != nil {
		return x.Status
	}
	return IngestionStatus_CREATED
}

func (x *GetCurrentIngestionResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UpdateIngestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIngestionRequest) Reset() {
	*x = UpdateIngestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngestionRequest) ProtoMessage() {}

func (x *UpdateIngestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateIngestionRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_backtest_ingestion_service_proto_rawDescGZIP(), []int{2}
}

type UpdateIngestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingestion *Ingestion      `protobuf:"bytes,1,opt,name=ingestion,proto3" json:"ingestion,omitempty"`
	Status    IngestionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=foreverbull.backtest.IngestionStatus" json:"status,omitempty"`
}

func (x *UpdateIngestionResponse) Reset() {
	*x = UpdateIngestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngestionResponse) ProtoMessage() {}

func (x *UpdateIngestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_backtest_ingestion_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngestionResponse.ProtoReflect.Descriptor instead.
func (*UpdateIngestionResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_backtest_ingestion_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateIngestionResponse) GetIngestion() *Ingestion {
	if x != nil {
		return x.Ingestion
	}
	return nil
}

func (x *UpdateIngestionResponse) GetStatus() IngestionStatus {
	if x != nil {
		return x.Status
	}
	return IngestionStatus_CREATED
}

var File_foreverbull_backtest_ingestion_service_proto protoreflect.FileDescriptor

var file_foreverbull_backtest_ingestion_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14,
	0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x74, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c,
	0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x69,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x09, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75,
	0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0xff, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x72, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x66,
	0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75,
	0x6c, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x68, 0x6a, 0x6e, 0x69, 0x6c, 0x73, 0x73, 0x6f, 0x6e, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x74,
	0x65, 0x73, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_foreverbull_backtest_ingestion_service_proto_rawDescOnce sync.Once
	file_foreverbull_backtest_ingestion_service_proto_rawDescData = file_foreverbull_backtest_ingestion_service_proto_rawDesc
)

func file_foreverbull_backtest_ingestion_service_proto_rawDescGZIP() []byte {
	file_foreverbull_backtest_ingestion_service_proto_rawDescOnce.Do(func() {
		file_foreverbull_backtest_ingestion_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_foreverbull_backtest_ingestion_service_proto_rawDescData)
	})
	return file_foreverbull_backtest_ingestion_service_proto_rawDescData
}

var file_foreverbull_backtest_ingestion_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_foreverbull_backtest_ingestion_service_proto_goTypes = []any{
	(*GetCurrentIngestionRequest)(nil),  // 0: foreverbull.backtest.GetCurrentIngestionRequest
	(*GetCurrentIngestionResponse)(nil), // 1: foreverbull.backtest.GetCurrentIngestionResponse
	(*UpdateIngestionRequest)(nil),      // 2: foreverbull.backtest.UpdateIngestionRequest
	(*UpdateIngestionResponse)(nil),     // 3: foreverbull.backtest.UpdateIngestionResponse
	(*Ingestion)(nil),                   // 4: foreverbull.backtest.Ingestion
	(IngestionStatus)(0),                // 5: foreverbull.backtest.IngestionStatus
}
var file_foreverbull_backtest_ingestion_service_proto_depIdxs = []int32{
	4, // 0: foreverbull.backtest.GetCurrentIngestionResponse.ingestion:type_name -> foreverbull.backtest.Ingestion
	5, // 1: foreverbull.backtest.GetCurrentIngestionResponse.status:type_name -> foreverbull.backtest.IngestionStatus
	4, // 2: foreverbull.backtest.UpdateIngestionResponse.ingestion:type_name -> foreverbull.backtest.Ingestion
	5, // 3: foreverbull.backtest.UpdateIngestionResponse.status:type_name -> foreverbull.backtest.IngestionStatus
	0, // 4: foreverbull.backtest.IngestionServicer.GetCurrentIngestion:input_type -> foreverbull.backtest.GetCurrentIngestionRequest
	2, // 5: foreverbull.backtest.IngestionServicer.UpdateIngestion:input_type -> foreverbull.backtest.UpdateIngestionRequest
	1, // 6: foreverbull.backtest.IngestionServicer.GetCurrentIngestion:output_type -> foreverbull.backtest.GetCurrentIngestionResponse
	3, // 7: foreverbull.backtest.IngestionServicer.UpdateIngestion:output_type -> foreverbull.backtest.UpdateIngestionResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_foreverbull_backtest_ingestion_service_proto_init() }
func file_foreverbull_backtest_ingestion_service_proto_init() {
	if File_foreverbull_backtest_ingestion_service_proto != nil {
		return
	}
	file_foreverbull_backtest_ingestion_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_foreverbull_backtest_ingestion_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrentIngestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_backtest_ingestion_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrentIngestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_backtest_ingestion_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateIngestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_backtest_ingestion_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateIngestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foreverbull_backtest_ingestion_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_foreverbull_backtest_ingestion_service_proto_goTypes,
		DependencyIndexes: file_foreverbull_backtest_ingestion_service_proto_depIdxs,
		MessageInfos:      file_foreverbull_backtest_ingestion_service_proto_msgTypes,
	}.Build()
	File_foreverbull_backtest_ingestion_service_proto = out.File
	file_foreverbull_backtest_ingestion_service_proto_rawDesc = nil
	file_foreverbull_backtest_ingestion_service_proto_goTypes = nil
	file_foreverbull_backtest_ingestion_service_proto_depIdxs = nil
}
