// Code generated by mockery v2.50.1. DO NOT EDIT.

package pb

import (
	mock "github.com/stretchr/testify/mock"
	grpc "google.golang.org/grpc"
)

// MockStrategyServicerServer is an autogenerated mock type for the StrategyServicerServer type
type MockStrategyServicerServer struct {
	mock.Mock
}

// RunStrategy provides a mock function with given fields: _a0, _a1
func (_m *MockStrategyServicerServer) RunStrategy(_a0 *RunStrategyRequest, _a1 grpc.ServerStreamingServer[RunStrategyResponse]) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for RunStrategy")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*RunStrategyRequest, grpc.ServerStreamingServer[RunStrategyResponse]) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mustEmbedUnimplementedStrategyServicerServer provides a mock function with no fields
func (_m *MockStrategyServicerServer) mustEmbedUnimplementedStrategyServicerServer() {
	_m.Called()
}

// NewMockStrategyServicerServer creates a new instance of MockStrategyServicerServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockStrategyServicerServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockStrategyServicerServer {
	mock := &MockStrategyServicerServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
