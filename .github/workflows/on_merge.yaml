name: release
on:
  push:
    branches-ignore:
      - main

    #branches:
    #  - main

permissions: read-all

jobs:
  version_tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get the version
        id: version
        run: echo "version=0.0.$(date +"%y%m%d%H%M")" >> "$GITHUB_OUTPUT"

  build_python_packages:
    needs: version_tag
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install rye
        uses: eifinger/setup-rye@v4
      - name: Set foreverbull version
        working-directory: ./client/foreverbull
        run: |
          rye version ${{needs.version_tag.outputs.version}}
      - name: Set foreverbull testing version
        working-directory: ./client/foreverbull_testing
        run: |
          rye version ${{needs.version_tag.outputs.version}}
      - name: build packages
        run: |
          rye build -a
      - name: upload packages
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: client/dist

  build_push_zipline:
    needs: [build_python_packages, version_tag]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Download foreverbull pypi package
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: client
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: find location
        run: |
          echo $GITHUB_WORKSPACE
          pwd
          ls -la
          ls -la client
          ls -la client/foreverbull_zipline
          ls -la client/foreverbull_zipline/dist
          ls -la client/foreverbull_zipline/dist/foreverbull-0.0.2203030000-py3-none-any.whl

      - name: Build and push Zipline
        uses: docker/build-push-action@v6
        with:
          context: client
          platforms: linux/amd64,linux/arm64
          file: ./client/foreverbull_zipline/Dockerfile
          tags: lhjnilsson/zipline:${{needs.version_tag.outputs.version}}
          build-args: |
            FB_WHEEL=dist/foreverbull-${{needs.version_tag.outputs.version}}-py3-none-any.whl
          push: true

  build_push_foreverbull:
    needs: version_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push foreverbull
        uses: docker/build-push-action@v5
        with:
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: lhjnilsson/foreverbull:${{needs.version_tag.outputs.version}}
          push: true

  publish_python_client:
    needs: [version_tag, build_push_zipline, build_push_foreverbull]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Download foreverbull pypi package
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install rye
        uses: eifinger/setup-rye@v4
      - name: Build and publish Python client
        run: |
          rye publish -y --token ${{ secrets.PYPI_TOKEN }}

  create_release:
    needs: [version_tag, publish_python_client]
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      packages: write
      contents: write
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v2@v1
        with:
          name: ${{needs.version_tag.outputs.version}}
          tag_name: ${{needs.version_tag.outputs.version}}
          body: |
            Release ${{needs.version_tag.outputs.version}}
          prerelease: true
