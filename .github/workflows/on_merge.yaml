name: release
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  version_tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get the version
        id: version
        run: echo "version=0.0.$(date +"%y%m%d%H%M")" >> "$GITHUB_OUTPUT"

  build_push_zipline:
    needs: version_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Zipline
        uses: docker/build-push-action@v2
        with:
          context: external/client/python
          platforms: linux/amd64,linux/arm64
          file: ./external/client/python/zipline.Dockerfile
          tags: lhjnilsson/zipline:${{needs.version_tag.outputs.version}}
          push: true

  build_push_foreverbull:
    needs: version_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push foreverbull
        uses: docker/build-push-action@v5
        with:
          file: ./docker/release.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: lhjnilsson/foreverbull:${{needs.version_tag.outputs.version}}
          push: true

  build_python_client:
    needs: [version_tag, build_push_zipline, build_push_foreverbull]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip hatch
      - name: Build and publish Python client
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        run: |
          cd external/client/python
          hatch version ${{needs.version_tag.outputs.version}}
          hatch build
          hatch publish

  create_release:
    needs: [version_tag, build_python_client]
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      packages: write
      contents: write
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{needs.version_tag.outputs.version}}
          tag_name: ${{needs.version_tag.outputs.version}}
          body: |
            Release ${{needs.version_tag.outputs.version}}
          prerelease: true
