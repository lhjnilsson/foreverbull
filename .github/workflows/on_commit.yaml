name: "on commit jobs"
on: push

jobs:
  lint-unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test $(go list ./... | grep -v /tests/) -coverprofile=coverage.out -covermode=atomic -timeout 180s
        env:
          DISABLE_LOKI_LOGGING: true
      - name: Upload coverage to Codecov
        run: curl -s https://codecov.io/bash > codecov.sh && bash codecov.sh

  python-lint-unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./external/client/python
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies (for TA-Lib(zipline))
        run: |
          curl -L -o ta-lib-0.4.0-src.tar.gz  http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz &&
          tar xvfz ta-lib-0.4.0-src.tar.gz &&
          cd ta-lib &&
          ./configure &&
          sudo make &&
          sudo make install &&
          sudo ldconfig
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade hatch
      - name: Setup python environment
        run: |
          python -m hatch env create dev
      - name: Lint
        run: |
          python -m hatch run dev:lint
      - name: Unittest
        run: |
          python -m hatch run dev:test
      - name: Integration test
        run: |
          python -m hatch run dev:integration_test
      - name: Baseline performance
        uses: actions/upload-artifact@master
        with:
          name: baseline_performance.pickle
          path: ./external/client/python/baseline_performance.pickle
          retention-days: 1
      - name: Upload result.json
        uses: actions/upload-artifact@master
        with:
          name: result.json
          path: ./external/client/python/result.json
          retention-days: 1

  build-docker-containers:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Foreverbull
        uses: docker/build-push-action@v2
        with:
          file: ./docker/Dockerfile
          tags: lhjnilsson/foreverbull:on_commit
          outputs: type=docker,dest=/tmp/foreverbull.tar
      - name: Build Parallel Example
        uses: docker/build-push-action@v2
        with:
          context: external/client/python
          file: ./external/client/python/Dockerfile
          build-args: ALGO_FILE=examples/parallel.py
          tags: lhjnilsson/parallel-example:on_commit
          outputs: type=docker,dest=/tmp/parallel_example.tar
      - name: Build Non-Parallel Example
        uses: docker/build-push-action@v2
        with:
          context: external/client/python
          file: ./external/client/python/Dockerfile
          build-args: ALGO_FILE=examples/non_parallel.py
          tags: lhjnilsson/non-parallel-example:on_commit
          outputs: type=docker,dest=/tmp/non_parallel_example.tar
      - name: Build Multistep with Namespace
        uses: docker/build-push-action@v2
        with:
          context: external/client/python
          file: ./external/client/python/Dockerfile
          build-args: ALGO_FILE=examples/multistep_with_namespace.py
          tags: lhjnilsson/multistep-with-namespace-example:on_commit
          outputs: type=docker,dest=/tmp/multistep_with_namespace.tar
      - name: Build Zipline
        uses: docker/build-push-action@v2
        with:
          context: external/client/python
          file: ./external/client/python/zipline.Dockerfile
          tags: lhjnilsson/zipline:on_commit
          outputs: type=docker,dest=/tmp/zipline.tar
      - name: Upload foreverbull
        uses: actions/upload-artifact@v2
        with:
          name: foreverbull
          path: /tmp/foreverbull.tar
          retention-days: 1
      - name: Upload parallel_example
        uses: actions/upload-artifact@v2
        with:
          name: parallel_example
          path: /tmp/parallel_example.tar
          retention-days: 1
      - name: Upload non_parallel_example
        uses: actions/upload-artifact@v2
        with:
          name: non_parallel_example
          path: /tmp/non_parallel_example.tar
          retention-days: 1
      - name: Upload multistep with namespace
        uses: actions/upload-artifact@v2
        with:
          name: multistep_with_namespace
          path: /tmp/multistep_with_namespace.tar
          retention-days: 1
      - name: Upload zipline
        uses: actions/upload-artifact@v2
        with:
          name: zipline
          path: /tmp/zipline.tar
          retention-days: 1

  go-module-tests:
    needs: [lint-unit-tests, python-lint-unit-tests, build-docker-containers]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download Parallel Example
        uses: actions/download-artifact@v2
        with:
          name: parallel_example
          path: /tmp
      - name: Download Non-Parallel Example
        uses: actions/download-artifact@v2
        with:
          name: non_parallel_example
          path: /tmp
      - name: Download multistep with namespace
        uses: actions/download-artifact@v2
        with:
          name: multistep_with_namespace
          path: /tmp
      - name: Download zipline
        uses: actions/download-artifact@v2
        with:
          name: zipline
          path: /tmp
      - name: Load Parallel Example
        run: docker load -i /tmp/parallel_example.tar
      - name: Load Non-Parallel Example
        run: docker load -i /tmp/non_parallel_example.tar
      - name: Load Multistep with Namespace
        run: docker load -i /tmp/multistep_with_namespace.tar
      - name: Load zipline
        run: docker load -i /tmp/zipline.tar
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22
      - name: Integration Tests
        run: CONFIG_PATH=${PWD} go test -timeout 300s -run TestModule  ./... -p 1
        env:
          ALPACA_MARKETS_API_KEY: ${{ secrets.ALPACA_MARKETS_API_KEY }}
          ALPACA_MARKETS_API_SECRET: ${{ secrets.ALPACA_MARKETS_API_SECRET }}
          ALPACA_MARKETS_BASE_URL: ${{ secrets.ALPACA_MARKETS_BASE_URL }}
          IMAGES: lhjnilsson/parallel-example:on_commit,lhjnilsson/non-parallel-example:on_commit,lhjnilsson/multistep-with-namespace-example:on_commit
          BACKTEST_IMAGE: lhjnilsson/zipline:on_commit
          HOSTNAME: host.docker.internal
          LOG_LEVEL: info
          DISABLE_LOKI_LOGGING: true
      - name: Sleep for 20 seconds to make all containers stop
        run: sleep 20s
        shell: bash
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: ./logs
      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz
          retention-days: 1

  end-to-end-tests:
    needs: [lint-unit-tests, python-lint-unit-tests, build-docker-containers]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./external/client/python
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download Foreverbull
        uses: actions/download-artifact@v2
        with:
          name: foreverbull
          path: /tmp
      - name: Download foreverbull
        uses: actions/download-artifact@v2
        with:
          name: foreverbull
          path: /tmp
      - name: Download zipline
        uses: actions/download-artifact@v2
        with:
          name: zipline
          path: /tmp
      - name: Load zipline
        run: docker load -i /tmp/zipline.tar
      - name: load foreverbull
        run: docker load -i /tmp/foreverbull.tar
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install library and pytest
        run: |
          python -m pip install -e .
          python -m pip install pytest
      - name: Create environment
        run: |
          foreverbull env start ${{ secrets.ALPACA_MARKETS_API_KEY }} ${{ secrets.ALPACA_MARKETS_API_SECRET }} --broker-image lhjnilsson/foreverbull:on_commit --backtest-image lhjnilsson/zipline:on_commit
      - name: create backtest
        run: foreverbull backtest create github_action_test --start 2020-01-01 --end 2020-06-01 --symbols aapl,tsla,msft
      - name: Run backtest as pytest
        run: |
          python -m pytest examples/ --backtest=github_action_test
      - name: Sleep for 20 seconds to make all containers stop
        run: sleep 20s
        shell: bash
      - name: Stop Environment
        run: foreverbull env stop
