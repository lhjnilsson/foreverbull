name: "on commit jobs"
on:
  push:
    branches-ignore:
      - main

jobs:
  lint-unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test $(go list ./... | grep -v /tests/) -coverprofile=coverage.txt -covermode=atomic -timeout 180s
        env:
          DISABLE_LOKI_LOGGING: true
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  python-lint-unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies (for TA-Lib(zipline))
        run: |
          curl -L -o ta-lib-0.4.0-src.tar.gz  http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz &&
          tar xvfz ta-lib-0.4.0-src.tar.gz &&
          cd ta-lib &&
          ./configure &&
          sudo make &&
          sudo make install &&
          sudo ldconfig
      - name: Setup rye
        uses: eifinger/setup-rye@v4
      - name: Sync dependencies
        run: rye sync --no-lock
      - name: Lint
        run: |
          rye lint
      - name: Unittest foreverbull
        run: |
          rye test -- foreverbull/ --junitxml=/tmp/pytest_coverage_foreverbull.xml --cov-report=term-missing:skip-covered --cov=foreverbull/src foreverbull/tests/ | tee /tmp/pytest_coverage_foreverbull.txt
      - name: Unittest foreverbull_zipline
        run: |
          rye test -- foreverbull_zipline/ --junitxml=/tmp/pytest_coverage_foreverbull_zipline.xml --cov-report=term-missing:skip-covered --cov=foreverbull_zipline/src foreverbull_zipline/tests/ | tee /tmp/pytest_coverage_foreverbull_zipline.txt
      - name: Unittest foreverbull_testing
        run: |
          rye test -- foreverbull_testing/ --junitxml=/tmp/pytest_coverage_foreverbull_testing.xml --cov-report=term-missing:skip-covered --cov=foreverbull_testing/src foreverbull_testing/tests/  | tee /tmp/pytest_coverage_foreverbull_testing.txt
      - name: Unittest foreverbull_cli
        run: |
          rye test -- foreverbull_cli/ --junitxml=/tmp/pytest_coverage_foreverbull_cli.xml --cov-report=term-missing:skip-covered --cov=foreverbull_cli/src foreverbull_cli/tests/ | tee /tmp/pytest_coverage_foreverbull_cli.txt
      - name: Integration Tests foreverbull
        run: |
          rye test -- tests/integration/

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          title: "Python Client"
          pytest-coverage-path: /tmp/pytest_coverage_foreverbull.txt
          junitxml-path: /tmp/pytest_coverage_foreverbull.xml

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          title: "Python Client(Zipline)"
          pytest-coverage-path: /tmp/pytest_coverage_foreverbull_zipline.txt
          junitxml-path: /tmp/pytest_coverage_foreverbull_zipline.xml

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          title: "Python Client(Testing)"
          pytest-coverage-path: /tmp/pytest_coverage_foreverbull_testing.txt
          junitxml-path: /tmp/pytest_coverage_foreverbull_testing.xml

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          title: "Python Client(CLI)"
          pytest-coverage-path: /tmp/pytest_coverage_foreverbull_cli.txt
          junitxml-path: /tmp/pytest_coverage_foreverbull_cli.xml

  build-docker-foreverbull:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Foreverbull
        uses: docker/build-push-action@v6
        with:
          file: ./docker/Dockerfile
          tags: lhjnilsson/foreverbull:on_commit
          outputs: type=docker,dest=/tmp/foreverbull.tar
      - name: Upload foreverbull
        uses: actions/upload-artifact@v4
        with:
          name: foreverbull
          path: /tmp/foreverbull.tar
          retention-days: 1

  build-docker-grafana:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./grafana
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Grafana
        uses: docker/build-push-action@v6
        with:
          context: grafana
          file: ./grafana/Dockerfile
          tags: lhjnilsson/fb-grafana:on_commit
          outputs: type=docker,dest=/tmp/fb_grafana.tar
      - name: Upload Grafana
        uses: actions/upload-artifact@v4
        with:
          name: fb-grafana
          path: /tmp/fb_grafana.tar
          retention-days: 1

  go-module-tests:
    needs: [build-docker-foreverbull, build-docker-zipline]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download zipline
        uses: actions/download-artifact@v4
        with:
          name: zipline
          path: /tmp
      - name: Load zipline
        run: docker load -i /tmp/zipline.tar
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - name: Integration Tests
        run: go test -timeout 300s -run TestModule  ./... -p 1
        env:
          ALPACA_MARKETS_API_KEY: ${{ secrets.ALPACA_MARKETS_API_KEY }}
          ALPACA_MARKETS_API_SECRET: ${{ secrets.ALPACA_MARKETS_API_SECRET }}
          ALPACA_MARKETS_BASE_URL: ${{ secrets.ALPACA_MARKETS_BASE_URL }}
          IMAGES: lhjnilsson/parallel-example:on_commit,lhjnilsson/non-parallel-example:on_commit,lhjnilsson/multistep-with-namespace-example:on_commit
          BACKTEST_IMAGE: lhjnilsson/zipline:on_commit
          HOSTNAME: host.docker.internal
          LOG_LEVEL: info
          DISABLE_LOKI_LOGGING: true
      - name: Sleep for 20 seconds to make all containers stop
        run: sleep 20s
        shell: bash

  build-python-packages:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Setup rye
        uses: eifinger/setup-rye@v4
      - name: build foreverbull
        run: rye build --pyproject foreverbull/pyproject.toml
      - name: build foreverbull_testing
        run: rye build --pyproject foreverbull_testing/pyproject.toml
      - name: build foreverbull_cli
        run: rye build --pyproject foreverbull_cli/pyproject.toml
      - name: Upload foreverbull
        uses: actions/upload-artifact@v4
        with:
          name: foreverbull-0.0.1-py3-none-any.whl
          path: client/dist/foreverbull-0.0.1-py3-none-any.whl
          retention-days: 1
      - name: Upload foreverbull_testing
        uses: actions/upload-artifact@v4
        with:
          name: foreverbull_testing-0.0.1-py3-none-any.whl
          path: client/dist/foreverbull_testing-0.0.1-py3-none-any.whl
          retention-days: 1
      - name: Upload foreverbull_cli
        uses: actions/upload-artifact@v4
        with:
          name: foreverbull_cli-0.0.1-py3-none-any.whl
          path: client/dist/foreverbull_cli-0.0.1-py3-none-any.whl
          retention-days: 1
      - name: Upload example algorithms
        uses: actions/upload-artifact@v4
        with:
          name: example_algorithms
          path: client/example_algorithms

  build-docker-zipline:
    needs: [build-python-packages]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Download foreverbull pypi package
        uses: actions/download-artifact@v4
        with:
          name: foreverbull-0.0.1-py3-none-any.whl
          path: client
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Zipline
        uses: docker/build-push-action@v6
        with:
          context: client
          file: ./client/foreverbull_zipline/Dockerfile
          tags: lhjnilsson/zipline:on_commit
          build-args: |
            FB_WHEEL=foreverbull-0.0.1-py3-none-any.whl
          outputs: type=docker,dest=/tmp/zipline.tar
      - name: Upload zipline
        uses: actions/upload-artifact@v4
        with:
          name: zipline
          path: /tmp/zipline.tar
          retention-days: 1

  end-to-end-tests:
    needs:
      [
        build-docker-foreverbull,
        build-docker-zipline,
        build-python-packages,
        build-docker-grafana,
      ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download foreverbull
        uses: actions/download-artifact@v4
        with:
          name: foreverbull
          path: /tmp
      - name: Download zipline
        uses: actions/download-artifact@v4
        with:
          name: zipline
          path: /tmp
      - name: Download Grafana
        uses: actions/download-artifact@v4
        with:
          name: fb-grafana
          path: /tmp
      - name: Load zipline
        run: docker load -i /tmp/zipline.tar
      - name: load foreverbull
        run: docker load -i /tmp/foreverbull.tar
      - name: load fb-grafana
        run: docker load -i /tmp/fb_grafana.tar
      - name: Download foreverbull pypi package
        uses: actions/download-artifact@v4
        with:
          name: foreverbull-0.0.1-py3-none-any.whl
          path: /tmp
      - name: Download foreverbull-cli pypi package
        uses: actions/download-artifact@v4
        with:
          name: foreverbull_cli-0.0.1-py3-none-any.whl
          path: /tmp
      - name: Download foreverbull_testing pypi package
        uses: actions/download-artifact@v4
        with:
          name: foreverbull_testing-0.0.1-py3-none-any.whl
          path: /tmp
      - name: Download example_algorithms
        uses: actions/download-artifact@v4
        with:
          name: example_algorithms
          path: /tmp/example_algorithms
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install foreverbull and foreverbull_testing
        run: |
          pip install /tmp/foreverbull-0.0.1-py3-none-any.whl
          pip install /tmp/foreverbull_cli-0.0.1-py3-none-any.whl
          pip install /tmp/foreverbull_testing-0.0.1-py3-none-any.whl
      - name: Install example algorithms dependencies
        run: |
          wget https://github.com/ta-lib/ta-lib/releases/download/v0.6.2/ta-lib-0.6.2-src.tar.gz
          tar xvfz ta-lib-0.6.2-src.tar.gz
          cd ta-lib-0.6.2
          ./configure
          make
          sudo make install
          pip install ta-lib
      - name: Create environment
        run: |
          fbull env start --version on_commit
      - name: create backtest
        run: fbull backtest create /tmp/example_algorithms/nasdaq.json
      - name: ingest
        run: fbull backtest ingest
      - name: Run backtest as pytest
        working-directory: /tmp/example_algorithms
        env:
          PYTHONPATH: /tmp/example_algorithms/src
        run: |
          python -m pytest -vs
      - name: Sleep for 20 seconds to make all containers stop
        run: sleep 20s
        shell: bash

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "/tmp/docker_logs"
      - name: Tar logs
        if: failure()
        run: tar cvzf /tmp/docker_logs.tgz /tmp/docker_logs
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: end_to_end.tgz
          path: /tmp/docker_logs.tgz

      - name: Stop Environment
        run: foreverbull env stop
        continue-on-error: true

  run-manual-backtest:
    needs:
      [
        build-docker-foreverbull,
        build-docker-zipline,
        build-python-packages,
        build-docker-grafana,
      ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download foreverbull
        uses: actions/download-artifact@v4
        with:
          name: foreverbull
          path: /tmp
      - name: Download zipline
        uses: actions/download-artifact@v4
        with:
          name: zipline
          path: /tmp
      - name: Download Grafana
        uses: actions/download-artifact@v4
        with:
          name: fb-grafana
          path: /tmp
      - name: Load zipline
        run: docker load -i /tmp/zipline.tar
      - name: load foreverbull
        run: docker load -i /tmp/foreverbull.tar
      - name: load grafana
        run: docker load -i /tmp/fb_grafana.tar
      - name: Download foreverbull pypi package
        uses: actions/download-artifact@v4
        with:
          name: foreverbull-0.0.1-py3-none-any.whl
          path: /tmp
      - name: Download foreverbull-cli pypi package
        uses: actions/download-artifact@v4
        with:
          name: foreverbull_cli-0.0.1-py3-none-any.whl
          path: /tmp
      - name: Download foreverbull_testing pypi package
        uses: actions/download-artifact@v4
        with:
          name: foreverbull_testing-0.0.1-py3-none-any.whl
          path: /tmp
      - name: Download example_algorithms
        uses: actions/download-artifact@v4
        with:
          name: example_algorithms
          path: /tmp/example_algorithms
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install foreverbull and foreverbull_testing
        run: |
          pip install /tmp/foreverbull-0.0.1-py3-none-any.whl
          pip install /tmp/foreverbull_cli-0.0.1-py3-none-any.whl
          pip install /tmp/foreverbull_testing-0.0.1-py3-none-any.whl
      - name: Create environment
        run: |
          fbull env start --version on_commit
      - name: create backtest
        run: fbull backtest create /tmp/example_algorithms/nasdaq.json
      - name: ingest
        run: fbull backtest ingest
      - name: Run backtest as pytest
        working-directory: /tmp/example_algorithms
        env:
          PYTHONPATH: /tmp/example_algorithms/src
        run: |
          fbull backtest run nasdaq /tmp/example_algorithms/src/example_algorithms/parallel.py

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "/tmp/manual_backtest_logs"
      - name: Tar logs
        if: failure()
        run: tar cvzf /tmp/manual_backtest_logs.tgz /tmp/manual_backtest_logs
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: run_manual_backtest.tgz
          path: /tmp/manual_backtest_logs.tgz

      - name: Sleep for 20 seconds to make all containers stop
        run: sleep 20s
        shell: bash
      - name: Stop Environment
        run: foreverbull env stop
        continue-on-error: true
