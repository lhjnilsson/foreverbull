// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: foreverbull/pb/backtest/broker.proto

package backtest

import (
	finance "github.com/lhjnilsson/foreverbull/internal/pb/finance"
	service "github.com/lhjnilsson/foreverbull/internal/pb/service"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBacktestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetBacktestRequest) Reset() {
	*x = GetBacktestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBacktestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBacktestRequest) ProtoMessage() {}

func (x *GetBacktestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBacktestRequest.ProtoReflect.Descriptor instead.
func (*GetBacktestRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{0}
}

func (x *GetBacktestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetBacktestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Backtest *Backtest `protobuf:"bytes,2,opt,name=backtest,proto3" json:"backtest,omitempty"`
}

func (x *GetBacktestResponse) Reset() {
	*x = GetBacktestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBacktestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBacktestResponse) ProtoMessage() {}

func (x *GetBacktestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBacktestResponse.ProtoReflect.Descriptor instead.
func (*GetBacktestResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{1}
}

func (x *GetBacktestResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetBacktestResponse) GetBacktest() *Backtest {
	if x != nil {
		return x.Backtest
	}
	return nil
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BacktestName string `protobuf:"bytes,1,opt,name=backtest_name,json=backtestName,proto3" json:"backtest_name,omitempty"`
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSessionRequest) GetBacktestName() string {
	if x != nil {
		return x.BacktestName
	}
	return ""
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type GetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{4}
}

func (x *GetSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{5}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type CreateExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string    `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Backtest  *Backtest `protobuf:"bytes,2,opt,name=backtest,proto3" json:"backtest,omitempty"`
	Benchmark *string   `protobuf:"bytes,3,opt,name=benchmark,proto3,oneof" json:"benchmark,omitempty"`
}

func (x *CreateExecutionRequest) Reset() {
	*x = CreateExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExecutionRequest) ProtoMessage() {}

func (x *CreateExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExecutionRequest.ProtoReflect.Descriptor instead.
func (*CreateExecutionRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{6}
}

func (x *CreateExecutionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateExecutionRequest) GetBacktest() *Backtest {
	if x != nil {
		return x.Backtest
	}
	return nil
}

func (x *CreateExecutionRequest) GetBenchmark() string {
	if x != nil && x.Benchmark != nil {
		return *x.Benchmark
	}
	return ""
}

type CreateExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *service.ExecutionConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *CreateExecutionResponse) Reset() {
	*x = CreateExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExecutionResponse) ProtoMessage() {}

func (x *CreateExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExecutionResponse.ProtoReflect.Descriptor instead.
func (*CreateExecutionResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{7}
}

func (x *CreateExecutionResponse) GetConfiguration() *service.ExecutionConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type RunExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId string `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
}

func (x *RunExecutionRequest) Reset() {
	*x = RunExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExecutionRequest) ProtoMessage() {}

func (x *RunExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExecutionRequest.ProtoReflect.Descriptor instead.
func (*RunExecutionRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{8}
}

func (x *RunExecutionRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type RunExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Execution *Execution         `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	Portfolio *finance.Portfolio `protobuf:"bytes,2,opt,name=portfolio,proto3" json:"portfolio,omitempty"`
}

func (x *RunExecutionResponse) Reset() {
	*x = RunExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExecutionResponse) ProtoMessage() {}

func (x *RunExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExecutionResponse.ProtoReflect.Descriptor instead.
func (*RunExecutionResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{9}
}

func (x *RunExecutionResponse) GetExecution() *Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *RunExecutionResponse) GetPortfolio() *finance.Portfolio {
	if x != nil {
		return x.Portfolio
	}
	return nil
}

type GetExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId string `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
}

func (x *GetExecutionRequest) Reset() {
	*x = GetExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionRequest) ProtoMessage() {}

func (x *GetExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionRequest) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{10}
}

func (x *GetExecutionRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type GetExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Execution *Execution `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	Periods   []*Period  `protobuf:"bytes,2,rep,name=periods,proto3" json:"periods,omitempty"`
}

func (x *GetExecutionResponse) Reset() {
	*x = GetExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionResponse) ProtoMessage() {}

func (x *GetExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foreverbull_pb_backtest_broker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionResponse) Descriptor() ([]byte, []int) {
	return file_foreverbull_pb_backtest_broker_proto_rawDescGZIP(), []int{11}
}

func (x *GetExecutionResponse) GetExecution() *Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *GetExecutionResponse) GetPeriods() []*Period {
	if x != nil {
		return x.Periods
	}
	return nil
}

var File_foreverbull_pb_backtest_broker_proto protoreflect.FileDescriptor

var file_foreverbull_pb_backtest_broker_proto_rawDesc = []byte{
	0x0a, 0x24, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x70, 0x62,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62,
	0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x70, 0x62, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x66,
	0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x08, 0x62,
	0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x50, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75,
	0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xa7, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x62, 0x61, 0x63,
	0x6b, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x6f, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x66, 0x6f,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x13, 0x52, 0x75,
	0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x22, 0x38, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x32, 0xcf, 0x02, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x6a, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x66, 0x6f, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0xe7, 0x02, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0c,
	0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x66,
	0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x66, 0x6f, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x6d, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e,
	0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x66, 0x6f,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x68, 0x6a, 0x6e, 0x69,
	0x6c, 0x73, 0x73, 0x6f, 0x6e, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x62, 0x75, 0x6c,
	0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_foreverbull_pb_backtest_broker_proto_rawDescOnce sync.Once
	file_foreverbull_pb_backtest_broker_proto_rawDescData = file_foreverbull_pb_backtest_broker_proto_rawDesc
)

func file_foreverbull_pb_backtest_broker_proto_rawDescGZIP() []byte {
	file_foreverbull_pb_backtest_broker_proto_rawDescOnce.Do(func() {
		file_foreverbull_pb_backtest_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_foreverbull_pb_backtest_broker_proto_rawDescData)
	})
	return file_foreverbull_pb_backtest_broker_proto_rawDescData
}

var file_foreverbull_pb_backtest_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_foreverbull_pb_backtest_broker_proto_goTypes = []any{
	(*GetBacktestRequest)(nil),             // 0: foreverbull.pb.backtest.GetBacktestRequest
	(*GetBacktestResponse)(nil),            // 1: foreverbull.pb.backtest.GetBacktestResponse
	(*CreateSessionRequest)(nil),           // 2: foreverbull.pb.backtest.CreateSessionRequest
	(*CreateSessionResponse)(nil),          // 3: foreverbull.pb.backtest.CreateSessionResponse
	(*GetSessionRequest)(nil),              // 4: foreverbull.pb.backtest.GetSessionRequest
	(*GetSessionResponse)(nil),             // 5: foreverbull.pb.backtest.GetSessionResponse
	(*CreateExecutionRequest)(nil),         // 6: foreverbull.pb.backtest.CreateExecutionRequest
	(*CreateExecutionResponse)(nil),        // 7: foreverbull.pb.backtest.CreateExecutionResponse
	(*RunExecutionRequest)(nil),            // 8: foreverbull.pb.backtest.RunExecutionRequest
	(*RunExecutionResponse)(nil),           // 9: foreverbull.pb.backtest.RunExecutionResponse
	(*GetExecutionRequest)(nil),            // 10: foreverbull.pb.backtest.GetExecutionRequest
	(*GetExecutionResponse)(nil),           // 11: foreverbull.pb.backtest.GetExecutionResponse
	(*Backtest)(nil),                       // 12: foreverbull.pb.backtest.Backtest
	(*Session)(nil),                        // 13: foreverbull.pb.backtest.Session
	(*service.ExecutionConfiguration)(nil), // 14: foreverbull.pb.service.ExecutionConfiguration
	(*Execution)(nil),                      // 15: foreverbull.pb.backtest.Execution
	(*finance.Portfolio)(nil),              // 16: foreverbull.pb.finance.Portfolio
	(*Period)(nil),                         // 17: foreverbull.pb.backtest.Period
}
var file_foreverbull_pb_backtest_broker_proto_depIdxs = []int32{
	12, // 0: foreverbull.pb.backtest.GetBacktestResponse.backtest:type_name -> foreverbull.pb.backtest.Backtest
	13, // 1: foreverbull.pb.backtest.CreateSessionResponse.session:type_name -> foreverbull.pb.backtest.Session
	13, // 2: foreverbull.pb.backtest.GetSessionResponse.session:type_name -> foreverbull.pb.backtest.Session
	12, // 3: foreverbull.pb.backtest.CreateExecutionRequest.backtest:type_name -> foreverbull.pb.backtest.Backtest
	14, // 4: foreverbull.pb.backtest.CreateExecutionResponse.configuration:type_name -> foreverbull.pb.service.ExecutionConfiguration
	15, // 5: foreverbull.pb.backtest.RunExecutionResponse.execution:type_name -> foreverbull.pb.backtest.Execution
	16, // 6: foreverbull.pb.backtest.RunExecutionResponse.portfolio:type_name -> foreverbull.pb.finance.Portfolio
	15, // 7: foreverbull.pb.backtest.GetExecutionResponse.execution:type_name -> foreverbull.pb.backtest.Execution
	17, // 8: foreverbull.pb.backtest.GetExecutionResponse.periods:type_name -> foreverbull.pb.backtest.Period
	0,  // 9: foreverbull.pb.backtest.Broker.GetBacktest:input_type -> foreverbull.pb.backtest.GetBacktestRequest
	2,  // 10: foreverbull.pb.backtest.Broker.CreateSession:input_type -> foreverbull.pb.backtest.CreateSessionRequest
	4,  // 11: foreverbull.pb.backtest.Broker.GetSession:input_type -> foreverbull.pb.backtest.GetSessionRequest
	6,  // 12: foreverbull.pb.backtest.BrokerSession.CreateExecution:input_type -> foreverbull.pb.backtest.CreateExecutionRequest
	8,  // 13: foreverbull.pb.backtest.BrokerSession.RunExecution:input_type -> foreverbull.pb.backtest.RunExecutionRequest
	10, // 14: foreverbull.pb.backtest.BrokerSession.GetExecution:input_type -> foreverbull.pb.backtest.GetExecutionRequest
	1,  // 15: foreverbull.pb.backtest.Broker.GetBacktest:output_type -> foreverbull.pb.backtest.GetBacktestResponse
	3,  // 16: foreverbull.pb.backtest.Broker.CreateSession:output_type -> foreverbull.pb.backtest.CreateSessionResponse
	5,  // 17: foreverbull.pb.backtest.Broker.GetSession:output_type -> foreverbull.pb.backtest.GetSessionResponse
	7,  // 18: foreverbull.pb.backtest.BrokerSession.CreateExecution:output_type -> foreverbull.pb.backtest.CreateExecutionResponse
	9,  // 19: foreverbull.pb.backtest.BrokerSession.RunExecution:output_type -> foreverbull.pb.backtest.RunExecutionResponse
	11, // 20: foreverbull.pb.backtest.BrokerSession.GetExecution:output_type -> foreverbull.pb.backtest.GetExecutionResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_foreverbull_pb_backtest_broker_proto_init() }
func file_foreverbull_pb_backtest_broker_proto_init() {
	if File_foreverbull_pb_backtest_broker_proto != nil {
		return
	}
	file_foreverbull_pb_backtest_backtest_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_foreverbull_pb_backtest_broker_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetBacktestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetBacktestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RunExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RunExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foreverbull_pb_backtest_broker_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_foreverbull_pb_backtest_broker_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foreverbull_pb_backtest_broker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_foreverbull_pb_backtest_broker_proto_goTypes,
		DependencyIndexes: file_foreverbull_pb_backtest_broker_proto_depIdxs,
		MessageInfos:      file_foreverbull_pb_backtest_broker_proto_msgTypes,
	}.Build()
	File_foreverbull_pb_backtest_broker_proto = out.File
	file_foreverbull_pb_backtest_broker_proto_rawDesc = nil
	file_foreverbull_pb_backtest_broker_proto_goTypes = nil
	file_foreverbull_pb_backtest_broker_proto_depIdxs = nil
}
