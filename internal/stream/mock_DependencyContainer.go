// Code generated by mockery v2.18.0. DO NOT EDIT.

package stream

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDependencyContainer is an autogenerated mock type for the DependencyContainer type
type MockDependencyContainer struct {
	mock.Mock
}

// AddMethod provides a mock function with given fields: key, f
func (_m *MockDependencyContainer) AddMethod(key Dependency, f func(context.Context, Message) (interface{}, error)) {
	_m.Called(key, f)
}

// AddSingleton provides a mock function with given fields: key, v
func (_m *MockDependencyContainer) AddSingleton(key Dependency, v interface{}) {
	_m.Called(key, v)
}

type mockConstructorTestingTNewMockDependencyContainer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDependencyContainer creates a new instance of MockDependencyContainer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDependencyContainer(t mockConstructorTestingTNewMockDependencyContainer) *MockDependencyContainer {
	mock := &MockDependencyContainer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
