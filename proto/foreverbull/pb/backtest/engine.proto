syntax = "proto3";

package foreverbull.pb.backtest;

option go_package = "github.com/lhjnilsson/foreverbull/internal/pb/backtest";

import "foreverbull/pb/backtest/backtest.proto";
import "foreverbull/pb/finance/finance.proto";
import "google/protobuf/timestamp.proto";


message IngestRequest {
    Ingestion ingestion = 1;
    bool upload = 2;
}

message IngestResponse {
    Ingestion ingestion = 1;
}

message GetIngestionRequest {
}

message GetIngestionResponse {
    Ingestion ingestion = 1;
}

message RunRequest {
    Backtest backtest = 1;
}

message RunResponse {
    Backtest backtest = 1;
}

message GetCurrentPeriodRequest {
}

message GetCurrentPeriodResponse {
    bool is_running = 1;
    optional foreverbull.pb.finance.Portfolio portfolio = 2;
}

message PlaceOrdersAndContinueRequest {
    repeated foreverbull.pb.finance.Order orders = 1;
}

message PlaceOrdersAndContinueResponse {
}

message GetResultRequest {
    string execution = 1;
    bool upload = 2;
}

message GetResultResponse {
    repeated Period periods = 1;
}

message StopRequest {
}

message StopResponse {
}

service Engine {
    rpc Ingest(IngestRequest) returns (IngestResponse) {}
    rpc GetIngestion(GetIngestionRequest) returns (GetIngestionResponse) {}
    rpc RunBacktest(RunRequest) returns (RunResponse) {}
    rpc GetCurrentPeriod(GetCurrentPeriodRequest) returns (GetCurrentPeriodResponse) {}
    rpc PlaceOrdersAndContinue(PlaceOrdersAndContinueRequest) returns (PlaceOrdersAndContinueResponse) {}
    rpc GetResult(GetResultRequest) returns (GetResultResponse) {}
    rpc Stop(StopRequest) returns (StopResponse) {}
}
