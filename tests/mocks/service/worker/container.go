// Code generated by mockery v2.18.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// container is an autogenerated mock type for the container type
type container struct {
	mock.Mock
}

// Flush provides a mock function with given fields:
func (_m *container) Flush() {
	_m.Called()
}

// Get provides a mock function with given fields:
func (_m *container) Get() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Set provides a mock function with given fields: value
func (_m *container) Set(value interface{}) error {
	ret := _m.Called(value)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewContainer interface {
	mock.TestingT
	Cleanup(func())
}

// newContainer creates a new instance of container. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newContainer(t mockConstructorTestingTnewContainer) *container {
	mock := &container{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
